/**
 * @generated-from ./$group-by.spec.ts
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import assert from 'static-type-assert';
import { AsyncIterable, AsyncGeneratorIterator, AsyncPromise } from '../internal/async-iterable';
import { asyncGroupBy } from '..';
declare var Ø: never;
assert<AsyncGeneratorIterator<[string, AsyncGeneratorIterator<string>]>>(
  asyncGroupBy(null)(Ø as string),
);
assert<AsyncGeneratorIterator<[number, AsyncGeneratorIterator<number>]>>(
  asyncGroupBy(null)(Ø as AsyncIterable<number>),
);
assert<AsyncGeneratorIterator<[string, AsyncGeneratorIterator<string>]>>(
  asyncGroupBy(null, Ø as string),
);
assert<AsyncGeneratorIterator<[number, AsyncGeneratorIterator<number>]>>(
  asyncGroupBy(null, Ø as AsyncIterable<number>),
);
assert<AsyncGeneratorIterator<[string, AsyncGeneratorIterator<number>]>>(
  asyncGroupBy(Ø as (x: number) => AsyncPromise<string>)(Ø as AsyncIterable<number>),
);
assert<AsyncGeneratorIterator<[string, AsyncGeneratorIterator<number>]>>(
  asyncGroupBy(Ø as (x: number) => AsyncPromise<string>, Ø as AsyncIterable<number>),
);
